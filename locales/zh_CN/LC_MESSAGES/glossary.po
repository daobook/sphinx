# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2024, the Sphinx developers
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 8.1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-24 10:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../glossary.rst:4
msgid "Glossary"
msgstr "术语表"

#: ../../glossary.rst:7
msgid "builder"
msgstr "构建器"

#: ../../glossary.rst:9
msgid ""
"A class (inheriting from :class:`~sphinx.builders.Builder`) that takes "
"parsed documents and performs an action on them.  Normally, builders "
"translate the documents to an output format, but it is also possible to "
"use builders that e.g. check for broken links in the documentation, or "
"build coverage information."
msgstr ""
"一个类（继承自 :class:`~sphinx.builders.Builder`），它接收解析后的文档并对它们执行操作。"
"通常，构建器会将文档转换为输出格式，但也可以使用其他构建器，例如检查文档中的断链，或生成覆盖率信息。"

#: ../../glossary.rst:15
msgid ""
"See :doc:`/usage/builders/index` for an overview over Sphinx's built-in "
"builders."
msgstr ""
"请参阅 :doc:`/usage/builders/index` 以概览 Sphinx 的内置构建器。"

#: ../../glossary.rst:17
msgid "configuration directory"
msgstr "配置目录"

#: ../../glossary.rst:19
msgid ""
"The directory containing :file:`conf.py`.  By default, this is the same "
"as the :term:`source directory`, but can be set differently with the "
"**-c** command-line option."
msgstr ""
"包含 :file:`conf.py` 的目录。默认情况下，它与 :term:`source directory` 相同，但可以通过 **-c** 命令行选项设置为不同的目录。"

#: ../../glossary.rst:22
msgid "directive"
msgstr "指令"

#: ../../glossary.rst:24
msgid ""
"A reStructuredText markup element that allows marking a block of content "
"with special meaning.  Directives are supplied not only by docutils, but "
"Sphinx and custom extensions can add their own.  The basic directive "
"syntax looks like this:"
msgstr ""
"一种 reStructuredText 标记元素，允许为内容块赋予特殊含义。"
"指令不仅由 docutils 提供，Sphinx 和自定义插件也可以添加自己的指令。基本的指令语法如下所示："

#: ../../glossary.rst:36
msgid "See :ref:`rst-directives` for more information."
msgstr "查阅 :ref:`rst-directives` 了解更多信息。"

#: ../../glossary.rst:37
msgid "document name"
msgstr "文档名称"

#: ../../glossary.rst:39
msgid ""
"Since reStructuredText source files can have different extensions (some "
"people like ``.txt``, some like ``.rst`` -- the extension can be "
"configured with :confval:`source_suffix`) and different OSes have "
"different path separators, Sphinx abstracts them: :dfn:`document names` "
"are always relative to the :term:`source directory`, the extension is "
"stripped, and path separators are converted to slashes.  All values, "
"parameters and such referring to \"documents\" expect such document "
"names."
msgstr ""
"由于 reStructuredText 源文件可以有不同的扩展名（有些人喜欢使用 ``.txt``，有些人喜欢使用 ``.rst`` —— "
"扩展名可以通过 :confval:`source_suffix` 配置），并且不同的操作系统有不同的路径分隔符，Sphinx 对它们进行了抽象： "
":dfn:`document names` 始终相对于 :term:`source directory`，扩展名被去掉，路径分隔符被转换为斜杠。"
"所有涉及“文档”的值、参数等都期望使用这种文档名称。"

#: ../../glossary.rst:48
msgid ""
"Examples for document names are ``index``, ``library/zipfile``, or "
"``reference/datamodel/types``.  Note that there is no leading or trailing"
" slash."
msgstr ""
"文档名称的例子有 ``index``，``library/zipfile`` 或 ``reference/datamodel/types``。注意没有前导或尾随斜杠。"

#: ../../glossary.rst:51
msgid "domain"
msgstr "域"

#: ../../glossary.rst:53
msgid ""
"A domain is a collection of markup (reStructuredText :term:`directive`\\ "
"s and :term:`role`\\ s) to describe and link to :term:`object`\\ s "
"belonging together, e.g. elements of a programming language.  Directive "
"and role names in a domain have names like ``domain:name``, e.g. "
"``py:function``."
msgstr ""
"域是一组标记（reStructuredText :term:`directive` 和 :term:`role`），用于描述和链接属于一起的 :term:`object`，例如编程语言的元素。"
"域中的指令和角色名称的格式为 ``domain:name``，例如 ``py:function``。"

#: ../../glossary.rst:58
msgid ""
"Having domains means that there are no naming problems when one set of "
"documentation wants to refer to e.g. C++ and Python classes.  It also "
"means that extensions that support the documentation of whole new "
"languages are much easier to write."
msgstr ""
"有域意味着当文档集想要引用例如 C++ 和 Python 类时，不会有命名冲突。"
"它也意味着编写支持新语言文档的扩展插件更容易。"

#: ../../glossary.rst:63
msgid "For more information, refer to :doc:`/usage/domains/index`."
msgstr "查阅 :doc:`/usage/domains/index` 了解更多信息。"

#: ../../glossary.rst:64
msgid "environment"
msgstr "环境"

#: ../../glossary.rst:66
msgid ""
"A structure where information about all documents under the root is "
"saved, and used for cross-referencing.  The environment is pickled after "
"the parsing stage, so that successive runs only need to read and parse "
"new and changed documents."
msgstr ""
"一个结构，其中保存了根目录下所有文档的信息，并用于交叉引用。"
"解析阶段之后，环境被保存，因此后续运行只需要读取和解析新的和更改的文档。"

#: ../../glossary.rst:70
msgid "extension"
msgstr "插件"

#: ../../glossary.rst:72
msgid ""
"A custom :term:`role`, :term:`directive` or other aspect of Sphinx that "
"allows users to modify any aspect of the build process within Sphinx."
msgstr ""
"自定义 :term:`role`、:term:`directive` 或其他 Sphinx 的方面，允许用户在 Sphinx 中修改任何方面的构建过程。"

#: ../../glossary.rst:75
msgid "For more information, refer to :doc:`/usage/extensions/index`."
msgstr "查阅 :doc:`/usage/extensions/index` 了解更多信息。"

#: ../../glossary.rst:76
msgid "master document"
msgstr "主文档"

#: ../../glossary.rst:77
msgid "root document"
msgstr "根文档"

#: ../../glossary.rst:79
msgid "The document that contains the root :rst:dir:`toctree` directive."
msgstr "包含根 :rst:dir:`toctree` 指令的文档。"

#: ../../glossary.rst:80
msgid "object"
msgstr "对象"

#: ../../glossary.rst:82
msgid ""
"The basic building block of Sphinx documentation.  Every \"object "
"directive\" (e.g. :rst:dir:`py:function` or :rst:dir:`object`) creates "
"such a block; and most objects can be cross-referenced to."
msgstr ""
"Sphinx 文档的基本构建块。每个“对象指令”（例如 :rst:dir:`py:function` 或 :rst:dir:`object`）都会创建这样的块；"
"大多数对象都可以被交叉引用。"

#: ../../glossary.rst:85
msgid "RemoveInSphinxXXXWarning"
msgstr ""

#: ../../glossary.rst:87
msgid ""
"The feature which is warned will be removed in Sphinx-XXX version. It "
"usually caused from Sphinx extensions which is using deprecated. See also"
" :ref:`when-deprecation-warnings-are-displayed`."
msgstr ""
"在 Sphinx-XXX 版本中，将被移除的特性。通常是由于使用了已弃用的 Sphinx 插件引起的。"
"请参阅 :ref:`when-deprecation-warnings-are-displayed`。"

#: ../../glossary.rst:90
msgid "role"
msgstr "角色"

#: ../../glossary.rst:92
msgid ""
"A reStructuredText markup element that allows marking a piece of text. "
"Like directives, roles are extensible.  The basic syntax looks like this:"
" ``:rolename:`content```.  See :ref:`rst-inline-markup` for details."
msgstr ""
"一种 reStructuredText 标记元素，允许标记一段文本。"
"像指令一样，角色是可扩展的。基本语法如下所示： ``:rolename:`content```。"
"查阅 :ref:`rst-inline-markup` 了解更多信息。"

#: ../../glossary.rst:95
msgid "source directory"
msgstr "源目录"

#: ../../glossary.rst:97
msgid ""
"The directory which, including its subdirectories, contains all source "
"files for one Sphinx project."
msgstr ""
"包含其所有子目录的目录，其中包含 Sphinx 项目的所有源文件。"

#: ../../glossary.rst:99
msgid "reStructuredText"
msgstr ""

#: ../../glossary.rst:101
msgid ""
"An easy-to-read, what-you-see-is-what-you-get plaintext markup syntax and"
" parser system."
msgstr ""
"易于阅读、所见即所得的纯文本标记语法和解析器系统。"
